"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"""""显示相关""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible                "不兼容vi模式 
set shortmess=atI               "启动的时候不显示那个援助乌干达儿童的提示  
"winpos 5 5                     "设定窗口位置  
"set lines=40 columns=155       "设定窗口大小  
set nu                          "显示行号  
set go=                         "不要图形按钮  
syntax on                       "语法高亮
colorscheme vcbc                "设置浅色主题
"colorscheme   blacklight	     "设置深色主题
"set guifont=Courier_New:h10:cANSI    "设置字体   
"set background=dark            "背景使用黑色   
autocmd InsertLeave * se nocul  "用浅色高亮当前行  
autocmd InsertEnter * se cul    "用浅色高亮当前行   
set showcmd                     "输入的命令显示出来，看的清楚些  
"set cmdheight=1                "命令行（在状态行下）的高度，设置为1  
"set whichwrap+=<,>,h,l         "允许backspace和光标键跨越行边界(不建议)  
"set scrolloff=3     	     "光标移动到buffer的顶部和底部时保持3行距离  
set novisualbell    	     "不要闪烁(抄袭者更不明白！！！！！！！！！！！help)  
set foldenable                  "允许折叠  
set foldmethod=indent           "更多的缩进表示更高级别的折叠，选项manual/indent/expr/syntax/diff/marker  

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"set laststatus=1    	     "启动显示状态行(1),总是显示状态行(2) ）
"set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %{strftime(\"%d/%m/%y\ -\ %H:%M\")}     
"set statusline=\ %<%F[%1*%M%*%n%R%H]%=\ %y\ %0(%{&fileformat}\ %{&encoding}\ %c:%l/%L%)\ 
"set statusline=[%F]%y%r%m%*%=[Line:%l/%L,Column:%c][%p%%]

""""""以上三个是显示状态栏的内容，包括字符和编码"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""搜索设置"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"""""实用设置""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set autoread                    "当文件被改动时自动载入
set autowrite                   "自动保存
autocmd FileType c,cpp map <buffer> <leader><space> :w<cr>:make<cr> "quickfix模式
set cmdheight=1                 "命令行（在状态行下）的高度，为1
set clipboard+=unnamed          "共享剪贴板
set nobackup                    "从不备份
set ruler                       "打开状态栏标尺
set cursorline                  "突出显示当前行
set guioptions-=T               "隐藏工具栏
set guioptions-=m               "隐藏菜单栏 
set noeb                        "去掉输入错误的提示声音
set confirm                     "在处理未保存或只读文件的时候，弹出确认
set history=100                 "历史记录数
set nobackup                    "禁止生成备份文件
set noswapfile                  "禁止生成临时文件
set gdefault                    "行内替换所有

"""""制表符设置""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"""""缩进和补全""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
filetype on                     "侦测文件类型
filetype plugin on              "允许执行 ftplugin 目录下的文件类型特定的脚本
filetype indent on              "按 indent 目录下的脚本自动缩进
set autoindent                  "自动缩进
set cindent                     "C语言语法自动缩进
set completeopt=preview,menu    "代码自动补全
set wildmenu                    "命令行补全以增强模式运行



set viminfo+=!                 "保存全局变量
set iskeyword+=_,$,@,%,#,-     "带有这些符号的单词不要被换行分割
set linespace=0                "字符间插入的像素行数目

set backspace=2                "使用回格键（backspace）正常处理indent, eol, start等

set whichwrap+=<,>,h,l         "允许backspace和光标键跨越行边界
set mouse=a                    "允许使用鼠标
set selection=exclusive
set selectmode=mouse,key

set report=0                  "报告改变行数的阈值

set fillchars=vert:\ ,stl:\ ,stlnc:\  "在被分割的窗口间显示空白，便于阅读

set showmatch                 "高亮显示匹配的括号
set matchtime=1               "匹配括号高亮的时间（单位是十分之一秒）

set scrolloff=3               "光标移动到buffer的顶部和底部时保持3行距离

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"""""编码设置""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"""""语言设置""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set langmenu=zh_CN
let $LANG='zh_CN'
set helplang=CN
"==have set over

:inoremap ( ()<esc>i
:inoremap ) <c-r>=ClosePair(')')<cr>
:inoremap { {}<esc>i
:inoremap } <c-r>=ClosePair('}')<cr>
:inoremap [ []<esc>i
:inoremap ] <c-r>=ClosePair(']')<cr>
:inoremap " ""<esc>i
:inoremap ' ''<esc>i
:inoremap ` ``<esc>i
au FileType scheme,racket,lisp,clojure :inoremap ' '
au FileType scheme,racket,lisp,clojure :inoremap ` `
au FileType scheme,racket,lisp,clojure :inoremap * **<esc>i
function ClosePair(char)
if getline('.')[col('.') - 1] == a:char
return "\<Right>"
else
return a:char
endif
endf


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"""""新文件标题""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"新建.c,.h,.sh,.py.java文件，自动插入文件头 
autocmd BufNewFile *.cpp,*.[ch],*.sh,*.py,*.java exec ": call SetTitle()" 
func SetTitle()         "定义函数SetTitle，自动插入文件头
    "如果文件类型为.c,.py文件 
    if &filetype == 'c' || &filetype == 'cpp'
        call setline(1, "/*************************************************************************") 
        call append(line("."),   "    > File Name:    ".expand("%")) 
        call append(line(".")+1, "    > Author:       time-river") 
        call append(line(".")+2, "    > E-mail:       feather12315@live.com ") 
        call append(line(".")+3, "    > Created Time: ".strftime("%c")) 
        call append(line(".")+4, "**************************************************************************/") 
        call append(line(".")+5, "")
    else
        if &filetype == 'sh'
            call setline(1, "#!/bin/bash")
            call append(line("."), "")
        endif
        "vim称py的filetype为python
        if &filetype == 'python'
            call setline(1, "# -*- coding: utf-8 -*-")
	    "为了对齐，就这样了
            call append(0, "#!/usr/bin/env python3")
            call append(line("."), "")
   	 endif
        call append(line(".")+1,"\##########################################################################")
        call append(line(".")+2, "\# File Name:    ".expand("%"))
        call append(line(".")+3, "\# Author:       time-river")
        call append(line(".")+4, "\# E-mail:       feather12315@live.com")
        call append(line(".")+5, "\# Created Time: ".strftime("%c"))
        call append(line(".")+6, "\##########################################################################")
        call append(line(".")+7, "")
	 call append(line(".")+8, "")
    endif
    if &filetype == 'cpp' 
        call append(line(".")+6, "#include<iostream>")
        call append(line(".")+7, "using namespace std;")
        call append(line(".")+8, "")
    endif
    if &filetype == 'c'
        call append(line(".")+6, "#include<stdio.h>")
        call append(line(".")+7, "")
    endif
    "新建文件后，自动定位到文件末尾
    autocmd BufNewFile * normal G
endfunc 


"""""以下无能为力"""""
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"""""键盘命令""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""“”
nmap <leader>w :w!<cr>
nmap <leader>f :find<cr>

" 映射全选+复制 ctrl+a
map <C-A> ggVGY
map! <C-A> <Esc>ggVGY
map <F12> gg=G
" 选中状态下 Ctrl+c 复制
vmap <C-c> "+y
"去空行  
nnoremap <F2> :g/^\s*$/d<CR> 
"比较文件  
nnoremap <C-F2> :vert diffsplit 
"新建标签  
map <M-F2> :tabnew<CR>  
"列出当前目录文件  
map <F3> :tabnew .<CR>  
"打开树状文件目录  
map <C-F3> \be  

""""""C，C++,java,sh 按F5运行
map <F5> :call CompileRunGcc()<CR>
func! CompileRunGcc()
    exec "w"
    if &filetype == 'c'
        exec "!gcc % -o %<"
        exec "! ./%<"
    elseif &filetype == 'cpp'
        exec "!g++ % -o %<"
        exec "! ./%<"
    elseif &filetype == 'java' 
        exec "!javac %" 
        exec "!java %<"
    elseif &filetype == 'sh'
        :!./%
    endif
endfunc

"""""C,C++的调试
map <F8> :call Rungdb()<CR>    
func! Rungdb()
    exec "w"
    if &filetype == 'c'
        exec "!gcc % -o %<"
        exec "! ./%<"
    elseif &filetype == 'cpp'
        exec "!g++ % -o %<"
        exec "! ./%<"
    endif
endfunc


set makeprg=g++\ -Wall\ \ %    "make 运行

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" CTags的设定  
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let Tlist_Sort_Type = "name"    " 按照名称排序  
let Tlist_Use_Right_Window = 1  " 在右侧显示窗口  
let Tlist_Compart_Format = 1    " 压缩方式  
let Tlist_Exist_OnlyWindow = 1  " 如果只有一个buffer，kill窗口也kill掉buffer  
let Tlist_File_Fold_Auto_Close = 0  " 不要关闭其他文件的tags  
let Tlist_Enable_Fold_Column = 0    " 不要显示折叠树  
autocmd FileType java set tags+=D:\tools\java\tags  
"autocmd FileType h,cpp,cc,c set tags+=D:\tools\cpp\tags  
"let Tlist_Show_One_File=1            "不同时显示多个文件的tag，只显示当前文件的
"设置tags  
set tags=tags  
"set autochdir 

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"其他东东
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"默认打开Taglist 
let Tlist_Auto_Open=1 
"""""""""""""""""""""""""""""" 
" Tag list (ctags) 
"""""""""""""""""""""""""""""""" 
let Tlist_Ctags_Cmd = '/usr/bin/ctags' 
let Tlist_Show_One_File = 1 "不同时显示多个文件的tag，只显示当前文件的 
let Tlist_Exit_OnlyWindow = 1 "如果taglist窗口是最后一个窗口，则退出vim 
let Tlist_Use_Right_Window = 1 "在右侧窗口中显示taglist窗口
" minibufexpl插件的一般设置
let g:miniBufExplMapWindowNavVim = 1
let g:miniBufExplMapWindowNavArrows = 1
let g:miniBufExplMapCTabSwitchBufs = 1

let g:miniBufExplModSelTarget = 1   
